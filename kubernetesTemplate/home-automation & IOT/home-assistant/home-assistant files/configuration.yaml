# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - YOUR_IP

mqtt:
  sensor: !include mqtt_sensors.yaml

# Weather alert sensor
sensor:
  - platform: rest
    name: Avertizare Meteo
    resource: https://hass-forum.ro/api/meteoro.php
    value_template: "{{ value_json.status }}"
    json_attributes:
      - mesaj
      - imagine
    scan_interval: 21600

# Horoscope REST sensor
rest:
  - scan_interval: 3600  # Updates every hour
    resource: https://hass-forum.ro/api/horoscop.php?zodiac=balanta
    sensor:
      - name: "Horoscop API Data"
        value_template: "{{ value_json.success }}"
        json_attributes:
          - sign
          - date
          - horoscope
input_select: !include input_selects.yaml
input_boolean: !include input_booleans.yaml  
# Template sensors
template:
  - sensor:
      - name: "Zodie Emoji"
        state: >
          {% set sign = state_attr('sensor.horoscop_api_data', 'sign') %}
          {{
            {
              'berbec': '♈', 'taur': '♉', 'gemeni': '♊', 'rac': '♋',
              'leu': '♌', 'fecioara': '♍', 'balanta': '♎', 'scorpion': '♏',
              'sagetator': '♐', 'capricorn': '♑', 'varsator': '♒', 'pesti': '♓'
            }[sign] if sign in ['berbec','taur','gemeni','rac','leu','fecioara',
                               'balanta','scorpion','sagetator','capricorn',
                               'varsator','pesti'] else '♋'
          }}
        attributes:
          sign: "{{ state_attr('sensor.horoscop_api_data', 'sign') }}"
          date: "{{ state_attr('sensor.horoscop_api_data', 'date') }}"
          horoscope: "{{ state_attr('sensor.horoscop_api_data', 'horoscope') }}"
      
      - name: "Music Energy Level"
        state: >
          {% set energy = states('sensor.audio_analyzer_over_mqtt_audio_energy') | float(0) %}
          {% if energy > 70 %}
            High Energy
          {% elif energy > 40 %}
            Medium Energy  
          {% elif energy > 15 %}
            Low Energy
          {% else %}
            Silent
          {% endif %}
        attributes:
          bass: "{{ states('sensor.audio_analyzer_over_mqtt_audio_bass') | float(0) }}"
          mids: "{{ states('sensor.audio_analyzer_over_mqtt_audio_mids') | float(0) }}"
          treble: "{{ states('sensor.audio_analyzer_over_mqtt_audio_treble') | float(0) }}"
          energy: "{{ states('sensor.audio_analyzer_over_mqtt_audio_energy') | float(0) }}"
          beat: "{{ states('sensor.audio_analyzer_over_mqtt_audio_beat') }}"
